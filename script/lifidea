#!/usr/bin/env ruby
$opt = {}
ARGV[1..-1].each{|e|r = e.split('=') ; $opt[r[0]] = r[1] || ''}
{'d'=>'development', 'p'=>'production', 't'=>'test'}.each{|k,v|$opt['env'] = v if $opt.keys.include?(k)}
ENV['RAILS_ENV'] = $rails_env = $opt['env'] || 'development'

require File.expand_path(File.dirname(__FILE__) + "/../config/environment")
#require 'ddl_include.rb'

def run(cmd)
  `#{cmd}`
  puts cmd if $opt['dbg']
end

$command = ARGV[0]
memcached_pid = File.join(Rails.root, "tmp/pids/memcached_#$rails_env.pid")
#debugger
case $command
when 'start'
  run "rake tmp:pids:clear"
  run "memcached -d -p #{Conf.memcached_port} -P #{memcached_pid}"
  run "rake sunspot:solr:start RAILS_ENV=#$rails_env"
  if $opt['svr']
    run "rails server -d -p #{Conf.webserver_port} -e #{$rails_env}"
  end
  #{}`script/collector.sh`
#  `nohup script/runner app/collector/collector_daemon.rb #$rails_env &`
when 'stop'
  File.unlink(memcached_pid)  if File.exists?(memcached_pid)
  #run "lib/daemons/collector_ctl stop  #{$rails_env}"
  run "rake sunspot:solr:stop RAILS_ENV=#$rails_env"
#  `lib/daemons/indexer_ctl stop`
#  `lib/daemons/searcher_ctl stop`
  $command = 'killall'
  require 'daemons/manager'
when 'status'
  require 'daemons/manager'
when 'test'
  $opt['dbg'] = true
  Rake::Task['test:units'].execute
  Rake::Task['test:integration'].execute
  #run "rake test:units"
  #run "rake test:integration"
when 'log'
  puts "==== OUTPUT ===="
  puts `tail log/#{$rails_env}.log`
  puts "==== ERRORS ===="
  puts `tail log/#{$rails_env}_error.log`
when 'install'
when 'commit'
  `git commit -a -m '#{ARGV[1..-1].join(" ")}'`
  `git push`
when 'update'
  `git pull`
when 'test'
  
end
